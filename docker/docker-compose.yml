
version: "3.9"

services:
  postgres:
    container_name: "ct-postgres"
    image: "postgres"
    env_file:
      - postgres.env
    networks:
      - classtranscribe
    volumes:
      - "pgdata:/var/lib/postgres/pgdata"
    restart: unless-stopped

  rabbitmq:
    container_name: "ct-rabbit"
    image: "rabbitmq:management"
    networks:
      - classtranscribe
    env_file:
      - rabbitmq.env
    restart: unless-stopped

  api:
    container_name: "ct-apiserver"
    image: "classtranscribe/api"
    depends_on:
      - postgres
      - rabbitmq
    networks:
      - classtranscribe
    build:
      context: ..
    volumes:
      - "../:/app"
    ports:
      - "0.0.0.0:5000:5000"
    env_file:
      - apiserver.env
    restart: unless-stopped

  queueawaker:
    container_name: "ct-queueawaker"
    image: "classtranscribe/taskagent"
    depends_on:
      - postgres
      - rabbitmq
      - api
    networks:
      - classtranscribe
    build:
      context: ../pkg/agent
      dockerfile: ../pkg/agent/Dockerfile
    env_file:
      - apiserver.env
    environment:
      - RABBITMQ_QUEUENAME=QueueAwaker
    restart: unless-stopped

  scenedetection:
    container_name: "ct-scenedetection"
    image: "classtranscribe/taskagent"
    depends_on:
      - postgres
      - rabbitmq
      - api
    networks:
      - classtranscribe
    build:
      context: ../pkg/agent
    env_file:
      - apiserver.env
    environment:
      - RABBITMQ_QUEUENAME=SceneDetection
    restart: unless-stopped

  exampletask:
    container_name: "ct-exampletask"
    image: "classtranscribe/taskagent"
    depends_on:
      - postgres
      - rabbitmq
      - api
    networks:
      - classtranscribe
    build:
      context: ../pkg/agent
    env_file:
      - apiserver.env
    environment:
      - RABBITMQ_QUEUENAME=ExampleTask
    restart: unless-stopped



  #taskengine:
  #  container_name: "ct-taskengine"
  #  image: "classtranscribe/taskengine"
  #  build:
  #    context: ../taskengine
  #    dockerfile: Dockerfile
  #  volumes:
  #    - "../taskengine:/app"
  #  env_file:
  #    - taskengine.env
  #  restart: always


networks:
  classtranscribe:

volumes:
  pgdata:
